/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

int main(void)
{
  uint32_t *pClkCtrlReg   = (uint32_t*) 0x40023830;  // RCC AHB1 peripheral clock enable register
  uint32_t *pPortModeReg  = (uint32_t*) 0x40020800;  // GPIOx mode register (for port)
  uint32_t *pPortOutReg   = (uint32_t*) 0x40020814;  // GPIOx output data register (ODR)

  // 1. Enable clock to GPIO port (assuming GPIOC, bit 2 in RCC AHB1ENR)
  *pClkCtrlReg |= 0x00000004;

  // 2. Configure pin 13 as output (bits 27:26 = 01 for pin 13)
  *pPortModeReg &= ~(0x3 << 26);  // Clear bits 27:26
  *pPortModeReg |=  (0x1 << 26);  // Set bit 26 (MODE13 = 01)

  while (1)
  {
    // Set pin 13 (turn LED on if active low)
    *pPortOutReg |= (1 << 13);

    // crude delay
    for (volatile int i = 0; i < 100000; i++);

    // Clear pin 13 (turn LED off)
    *pPortOutReg &= ~(1 << 13);

    // crude delay
    for (volatile int i = 0; i < 100000; i++);
  }
}
